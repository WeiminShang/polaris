{{- if .Values.webhook.enable -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: '{{.Release.Name}}'
    chart: '{{.Chart.Name}}-{{.Chart.Version}}'
    heritage: '{{.Release.Service}}'
    release: '{{.Release.Name}}'
  name: '{{ template "fullname" . }}-webhook'
  namespace: '{{.Release.Namespace}}'
spec:
  replicas: {{.Values.webhookreplicas}}
  selector:
    matchLabels:
      app: '{{.Release.Name}}'
  template:
    metadata:
      labels:
        app: '{{.Release.Name}}'
    spec:
      volumes:
      - configMap:
          name: '{{ template "fullname" . }}'
        name: '{{ template "fullname" . }}'
      - name: certs
        secret:
          secretName: '{{ template "fullname" . }}'
      containers:
      - command:
        - fairwinds
        - --webhook
        image: '{{.Values.webhook.image}}:{{.Values.webhook.imageTag}}'
        imagePullPolicy: '{{.Values.webhook.imagePullPolicy}}'
        name: webhook
        ports:
        - containerPort: 9876
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /tmp/cert/
          name: certs
        - mountPath: /opt/app/config.yml
          name: '{{ template "fullname" . }}'
          readOnly: true
          subPath: config.yml
      imagePullSecrets:
      - name: '{{.Values.imagePullSecrets}}'
      serviceAccountName: '{{ template "fullname" . }}'
{{- end -}}
